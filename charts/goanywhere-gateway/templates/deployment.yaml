apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "goanywhere-gateway.fullname" . }}
  labels:
    {{- include "goanywhere-gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "goanywhere-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "goanywhere-gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: goanywheregateway
          command:
            - /usr/local/HelpSystems/GoAnywhere_Gateway/bin/gagatewayd
            - start-launchd
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: controllerport
              containerPort: 9100
              protocol: TCP
            - name: dataport
              containerPort: 9101
              protocol: TCP
            - name: proxyport
              containerPort: 9102
              protocol: TCP
            - name: shutdownport
              containerPort: 9105
              protocol: TCP
          {{ if .Values.portRanges.enabled }}
          {{- range untilStep (.Values.portRanges.passiveProxyPortRangeFrom | int) (.Values.portRanges.passiveProxyPortRangeTo | int) 1 }}
            - containerPort: {{ . }}
              protocol: TCP
          {{- end }}

          {{- range untilStep (.Values.portRanges.udpInternalPortRangeFrom | int) (.Values.portRanges.udpInternalPortRangeTo | int) 1 }}
            - containerPort: {{ . }}
              protocol: UDP
          {{- end }}

          {{- range untilStep (.Values.portRanges.udpExternalPortRangeFrom | int) (.Values.portRanges.udpExternalPortRangeTo | int) 1 }}
            - containerPort: {{ . }}
              protocol: UDP
          {{- end }}
          {{ end }}
          readinessProbe:
            tcpSocket:
              port: proxyport
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
            successThreshold: 2
          startupProbe:
            tcpSocket:
              port: controllerport
            failureThreshold: 60
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: controllerport
            # initialDelaySeconds: 15
            periodSeconds: 5
            # successThreshold: 2
            failureThreshold: 1
          volumeMounts:
            - name: license
              mountPath: /usr/local/HelpSystems/GoAnywhere_Gateway/gateway.lic
              subPath: license
              readOnly: true
            - name: config
              readOnly: true
              mountPath: /usr/local/HelpSystems/GoAnywhere_Gateway/config
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: license
          secret:
            secretName: {{ include "goanywhere-gateway.fullname" . }}
        - name: config
          configMap:
            name: {{ include "goanywhere-gateway.fullname" . }}